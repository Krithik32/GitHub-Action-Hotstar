name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # ---------------- SonarQube Scan ----------------
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # ---------------- Set Docker Image Tag ----------------
      - name: Set Docker Image Tag
        run: echo "IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/amazon:${{ github.run_number }}" >> $GITHUB_ENV

      # ---------------- Build & Push Image ----------------
      - name: Build Docker Image
        run: |
          docker build -t amazon .
          docker tag amazon $IMAGE_TAG

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push $IMAGE_TAG
          docker tag amazon ${{ secrets.DOCKER_USERNAME }}/amazon:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/amazon:latest

      # ---------------- Trivy FS Scan ----------------
      - name: Run Trivy File System Scan
        run: trivy fs . > trivyfs.txt

      # ---------------- Install Docker Scout ----------------
      - name: Install Docker Scout
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh

      # ---------------- Run Docker Scout ----------------
      - name: Run Docker Scout CVE + Recommendations
        run: |
          echo "🔍 Running Docker Scout scan on $IMAGE_TAG"

          # Run CVE scan (don’t fail if CVEs found)
          docker scout cves $IMAGE_TAG --format json > scout-report.json || true

          # Run recommendations (don’t fail if recommendations found)
          docker scout recommendations $IMAGE_TAG --format json > scout-reco.json || true

          # Build HTML report
          echo "<html><body>" > scout-report.html
          echo "<h2>Docker Scout CVE Report for $IMAGE_TAG</h2><pre>" >> scout-report.html
          jq '.' scout-report.json >> scout-report.html
          echo "</pre><h2>Recommendations</h2><pre>" >> scout-report.html
          jq '.' scout-reco.json >> scout-report.html
          echo "</pre></body></html>" >> scout-report.html



      # ---------------- Deploy Container ----------------
      - name: Deploy Container
        run: |
          docker rm -f amazon || true
          docker run -d --name amazon -p 80:80 $IMAGE_TAG

      # ---------------- Upload Reports as Artifacts ----------------
      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: scan-reports
          path: |
            trivyfs.txt
            scout-report.json
            scout-report.html

      # ---------------- Email Notification ----------------
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "Pipeline ${{ job.status }}: ${{ github.workflow }} #${{ github.run_number }}"
          to: ${{ secrets.EMAIL_USER }}
          from: ${{ secrets.EMAIL_USER }}
          html_body: |
            <p>This is a GitHub Actions Amazon CICD pipeline status.</p>
            <p>Workflow: ${{ github.workflow }}</p>
            <p>Run Number: ${{ github.run_number }}</p>
            <p>Status: ${{ job.status }}</p>
            <p>Commit: ${{ github.sha }}</p>
            <p>Triggered by: ${{ github.actor }}</p>
            <p>Build URL: <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Build</a></p>
          attachments: |
            trivyfs.txt
            scout-report.json
            scout-report.html
